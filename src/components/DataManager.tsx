import React, { useState } from 'react';
import { dataManager } from '../utils/dataManager';
import './DataManager.css';

interface DataManagerProps {
  onClose: () => void;
  onNotification: (message: string, type: 'success' | 'error' | 'warning' | 'info') => void;
}

const DataManager: React.FC<DataManagerProps> = ({ onClose, onNotification }) => {
  const [isExporting, setIsExporting] = useState(false);
  const [isImporting, setIsImporting] = useState(false);

  const handleExport = () => {
    try {
      setIsExporting(true);
      dataManager.downloadBackup();
      onNotification('ุชู ุชุตุฏูุฑ ุงูุจูุงูุงุช ุจูุฌุงุญ!', 'success');
    } catch (error) {
      onNotification('ุญุฏุซ ุฎุทุฃ ุฃุซูุงุก ุชุตุฏูุฑ ุงูุจูุงูุงุช', 'error');
    } finally {
      setIsExporting(false);
    }
  };

  const handleImport = (event: React.ChangeEvent<HTMLInputElement>) => {
    const file = event.target.files?.[0];
    if (!file) return;

    setIsImporting(true);
    const reader = new FileReader();
    
    reader.onload = (e) => {
      try {
        const data = JSON.parse(e.target?.result as string);
        const success = dataManager.importData(data);
        
        if (success) {
          onNotification('ุชู ุงุณุชูุฑุงุฏ ุงูุจูุงูุงุช ุจูุฌุงุญ! ุณูุชู ุฅุนุงุฏุฉ ุชุญููู ุงูุตูุญุฉ.', 'success');
          setTimeout(() => {
            window.location.reload();
          }, 2000);
        } else {
          onNotification('ุญุฏุซ ุฎุทุฃ ุฃุซูุงุก ุงุณุชูุฑุงุฏ ุงูุจูุงูุงุช', 'error');
        }
      } catch (error) {
        onNotification('ููู ุงูุจูุงูุงุช ุบูุฑ ุตุงูุญ', 'error');
      } finally {
        setIsImporting(false);
      }
    };

    reader.readAsText(file);
  };

  const handleClearData = () => {
    if (window.confirm('ูู ุฃูุช ูุชุฃูุฏ ูู ุญุฐู ุฌููุน ุงูุจูุงูุงุชุ ูุฐุง ุงูุฅุฌุฑุงุก ูุง ูููู ุงูุชุฑุงุฌุน ุนูู.')) {
      dataManager.clearAllData();
      onNotification('ุชู ุญุฐู ุฌููุน ุงูุจูุงูุงุช. ุณูุชู ุฅุนุงุฏุฉ ุชุญููู ุงูุตูุญุฉ.', 'info');
      setTimeout(() => {
        window.location.reload();
      }, 2000);
    }
  };

  return (
    <div className="data-manager-overlay">
      <div className="data-manager-container">
        <div className="data-manager-header">
          <h2>ุฅุฏุงุฑุฉ ุงูุจูุงูุงุช</h2>
          <button className="close-btn" onClick={onClose}>ร</button>
        </div>

        <div className="data-manager-content">
          <div className="data-section">
            <h3>๐ค ุชุตุฏูุฑ ุงูุจูุงูุงุช</h3>
            <p>ุงุญูุธ ูุณุฎุฉ ุงุญุชูุงุทูุฉ ูู ุฌููุน ุจูุงูุงุชู</p>
            <button 
              className="btn-export" 
              onClick={handleExport}
              disabled={isExporting}
            >
              {isExporting ? 'ุฌุงุฑู ุงูุชุตุฏูุฑ...' : '๐ฅ ุชุตุฏูุฑ ุงูุจูุงูุงุช'}
            </button>
          </div>

          <div className="data-section">
            <h3>๐ฅ ุงุณุชูุฑุงุฏ ุงูุจูุงูุงุช</h3>
            <p>ุงุณุชุนุฏ ุงูุจูุงูุงุช ูู ููู ุงุญุชูุงุทู</p>
            <input
              type="file"
              accept=".json"
              onChange={handleImport}
              disabled={isImporting}
              className="file-input"
              id="import-file"
            />
            <label htmlFor="import-file" className="btn-import">
              {isImporting ? 'ุฌุงุฑู ุงูุงุณุชูุฑุงุฏ...' : '๐ค ุงุฎุชูุงุฑ ููู'}
            </label>
          </div>

          <div className="data-section danger-section">
            <h3>๐๏ธ ุญุฐู ุฌููุน ุงูุจูุงูุงุช</h3>
            <p>ุงุญุฐู ุฌููุน ุงูุจูุงูุงุช ุงููุญููุธุฉ (ูุง ูููู ุงูุชุฑุงุฌุน)</p>
            <button 
              className="btn-danger" 
              onClick={handleClearData}
            >
              ๐๏ธ ุญุฐู ุฌููุน ุงูุจูุงูุงุช
            </button>
          </div>

          <div className="data-info">
            <h4>โน๏ธ ูุนูููุงุช ูููุฉ:</h4>
            <ul>
              <li>ุงูุจูุงูุงุช ูุญููุธุฉ ูุญููุงู ูู ูุชุตูุญู</li>
              <li>ูู ุจุชุตุฏูุฑ ุงูุจูุงูุงุช ุจุงูุชุธุงู ููุณุฎุฉ ุงุญุชูุงุทูุฉ</li>
              <li>ููููู ููู ุงูุจูุงูุงุช ุจูู ุงูุฃุฌูุฒุฉ ุจุงุณุชุฎุฏุงู ุงูุชุตุฏูุฑ/ุงูุงุณุชูุฑุงุฏ</li>
              <li>ุญุฐู ุจูุงูุงุช ุงููุชุตูุญ ุณูุคุฏู ูููุฏุงู ุงูุจูุงูุงุช</li>
            </ul>
          </div>
        </div>
      </div>
    </div>
  );
};

export default DataManager;
